            apiService?.registerUser(RegistrationResponse(RegistrationResponse.User(registrationName.text.toString(),
                    registrationEmail.text.toString(),
                    registrationPassword.text.toString(),
                    registrationPasswordConfirm.text.toString(),
                    registrationPhone.text.toString())))?.enqueue(object: Callback<RegistrationResponse>{
                override fun onResponse(call: Call<RegistrationResponse>, response: Response<RegistrationResponse>) {
                    //logd("post submitted to API." + response.body())
                    if (response.isSuccessful) {

                        //logd("post registration to API" + response.body().toString())
                        snack("Форма была успешно отправлена")
                    }
                    else snack("Произошла ошибка")
                }

                override fun onFailure(call: Call<RegistrationResponse>, t: Throwable) {
                    t.printStackTrace()
                    snack("Произошла ошибка")
                }
            })


        /*sr.getSharesObservable(context)?.subscribe ({ response->
            if (response.success) {
                updateShares(response.shares)
                logd("Запрос успешно получен")
                sv.showSnack("Успешно получены данные")
            } else sv.showSnack("Произошла ошибка при получении запроса")
        }, { error ->
            error.printStackTrace()
            sv.showSnack("Проверьте подключение к интернету.")
        })*/